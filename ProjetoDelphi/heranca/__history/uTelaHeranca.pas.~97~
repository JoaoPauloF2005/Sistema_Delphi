unit uTelaHeranca;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.Grids, Vcl.DBGrids, Vcl.StdCtrls, Vcl.Mask, Vcl.ComCtrls,
  Vcl.ExtCtrls, Vcl.DBCtrls, Vcl.Buttons, uDTMConexao, ZAbstractRODataset, ZAbstractDataset, ZDataset, uEnum,
  RxToolEdit, RxCurrEdit;

type
  TfrmTelaHeranca = class(TForm)
    pgcPrincipal: TPageControl;
    pnlRodape: TPanel;
    tabListagem: TTabSheet;
    tabManutencao: TTabSheet;
    pnlListagemTopo: TPanel;
    mskPesquisar: TMaskEdit;
    btnPesquisar: TButton;
    grdListagem: TDBGrid;
    btnNovo: TBitBtn;
    btnAlterar: TBitBtn;
    btnCancelar: TBitBtn;
    btnGravar: TBitBtn;
    btnApagar: TBitBtn;
    btnFechar: TBitBtn;
    btnNavigator: TDBNavigator;
    QryListagem: TZQuery;
    dtsListagem: TDataSource;
    lblIndice: TLabel;

    procedure FormCreate(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);

    procedure btnNovoClick(Sender: TObject);
    procedure btnCancelarClick(Sender: TObject);
    procedure btnGravarClick(Sender: TObject);
    procedure btnApagarClick(Sender: TObject);
    procedure btnAlterarClick(Sender: TObject);
    procedure grdListagemTitleClick(Column: TColumn);
    procedure grdListagemDblClick(Sender: TObject);
    procedure mskPesquisarChange(Sender: TObject);
    procedure BloqueiaCTRL_DEL_DBGrid(var Key: Word; Shift: TShiftState);

  private
    procedure ControlarBotoes(btnNovo, btnAlterar, btnCancelar, btnGravar, btnApagar: TBitBtn;
      Navegador: TDBNavigator; pgcPrincipal: TPageControl; Flag: Boolean);
    procedure ControlarIndiceTab(pgcPrincipal: TPageControl; Indice: Integer);
    function RetornarCampoTraduzido(Campo: string): string;
    procedure ExibirLabelIndice(Campo: string; aLabel: TLabel);
    function ExisteCampoObrigatorio: Boolean;
    procedure DesabilitarEditPK;
    procedure LimparEdits;

  public
    IndiceAtual: string;
    EstadoDoCadastro: TEstadoDoCadastro;
    function Apagar: Boolean; virtual;
    function Gravar(EstadoDoCadastro: TEstadoDoCadastro): Boolean; virtual;
  end;

var
  frmTelaHeranca: TfrmTelaHeranca;

implementation

{$R *.dfm}

{$REGION 'FUNÇÕES E PROCEDURES'}

procedure TfrmTelaHeranca.ControlarBotoes(btnNovo, btnAlterar, btnCancelar, btnGravar, btnApagar: TBitBtn;
  Navegador: TDBNavigator; pgcPrincipal: TPageControl; Flag: Boolean);
begin
  btnNovo.Enabled := Flag;
  btnApagar.Enabled := Flag;
  btnAlterar.Enabled := Flag;
  Navegador.Enabled := Flag;
  pgcPrincipal.Pages[0].TabVisible := Flag;
  btnCancelar.Enabled := not Flag;
  btnGravar.Enabled := not Flag;
end;

procedure TfrmTelaHeranca.ControlarIndiceTab(pgcPrincipal: TPageControl; Indice: Integer);
begin
  if pgcPrincipal.Pages[Indice].TabVisible then
    pgcPrincipal.TabIndex := Indice;
end;

function TfrmTelaHeranca.RetornarCampoTraduzido(Campo: string): string;
var
  i: Integer;
begin
  for i := 0 to QryListagem.Fields.Count - 1 do
  begin
    if LowerCase(QryListagem.Fields[i].FieldName) = LowerCase(Campo) then
    begin
      Result := QryListagem.Fields[i].DisplayLabel;
      Exit;
    end;
  end;
end;

procedure TfrmTelaHeranca.ExibirLabelIndice(Campo: string; aLabel: TLabel);
begin
  aLabel.Caption := RetornarCampoTraduzido(Campo);
end;

function TfrmTelaHeranca.ExisteCampoObrigatorio: Boolean;
var
  i: Integer;
begin
  Result := False;
  for i := 0 to ComponentCount - 1 do
  begin
    if (Components[i] is TLabeledEdit) and (TLabeledEdit(Components[i]).Tag = 2) and
      (TLabeledEdit(Components[i]).Text = '') then
    begin
      MessageDlg(TLabeledEdit(Components[i]).EditLabel.Caption + ' é um campo obrigatório', mtInformation, [mbOK], 0);
      TLabeledEdit(Components[i]).SetFocus;
      Exit(True);
    end;
  end;
end;

procedure TfrmTelaHeranca.DesabilitarEditPK;
var
  i: Integer;
begin
  for i := 0 to ComponentCount - 1 do
    if (Components[i] is TLabeledEdit) and (TLabeledEdit(Components[i]).Tag = 1) then
    begin
      TLabeledEdit(Components[i]).Enabled := False;
      Break;
    end;
end;

procedure TfrmTelaHeranca.LimparEdits;
var
  i: Integer;
begin
  for i := 0 to ComponentCount - 1 do
  begin
    if Components[i] is TLabeledEdit then
      TLabeledEdit(Components[i]).Text := ''
    else if Components[i] is TEdit then
      TEdit(Components[i]).Text := ''
    else if Components[i] is TDBLookupComboBox then
      TDBLookupComboBox(Components[i]).KeyValue := Null
    else if Components[i] is TMemo then
      TMemo(Components[i]).Text := ''
    else if Components[i] is TCurrencyEdit then
      TCurrencyEdit(Components[i]).Text := ''
    else if Components[i] is TDateEdit then
      TDateEdit(Components[i]).Date := 0
    else if Components[i] is TMaskEdit then
      TMaskEdit(Components[i]).Text := '';
  end;
end;

{$ENDREGION}

{$REGION 'MÉTODOS VIRTUAIS'}

function TfrmTelaHeranca.Apagar: Boolean;
begin
  ShowMessage('DELETADO');
  Result := True;
end;

function TfrmTelaHeranca.Gravar(EstadoDoCadastro: TEstadoDoCadastro): Boolean;
begin
  if EstadoDoCadastro = ecInserir then
    ShowMessage('Inserir')
  else if EstadoDoCadastro = ecAlterar then
    ShowMessage('Alterado');
  Result := True;
end;

{$ENDREGION}

procedure TfrmTelaHeranca.FormCreate(Sender: TObject);
begin
  QryListagem.Connection := dtmPrincipal.ConexaoDB;
  dtsListagem.DataSet := QryListagem;
  grdListagem.DataSource := dtsListagem;
end;

procedure TfrmTelaHeranca.FormShow(Sender: TObject);
begin
  if QryListagem.SQL.Text <> '' then
  begin
    QryListagem.IndexFieldNames := IndiceAtual;
    ExibirLabelIndice(IndiceAtual, lblIndice);
    QryListagem.Open;
  end;
  DesabilitarEditPK;
end;

procedure TfrmTelaHeranca.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  QryListagem.Close;
end;

procedure TfrmTelaHeranca.grdListagemDblClick(Sender: TObject);
begin
  btnAlterar.Click;
end;

procedure TfrmTelaHeranca.grdListagemTitleClick(Column: TColumn);
begin
  IndiceAtual := Column.FieldName;
  QryListagem.IndexFieldNames := IndiceAtual;
end;

procedure TfrmTelaHeranca.BloqueiaCTRL_DEL_DBGrid(var Key: Word; Shift: TShiftState);
begin
  if (Shift = [ssCtrl]) and (Key = VK_DELETE) then
    Key := 0;
end;
end.
